/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PageRouteImport } from './routes/page'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PokemonIndexRouteImport } from './routes/pokemon/index'
import { Route as PokemonIdRouteImport } from './routes/pokemon/$id'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const PageRoute = PageRouteImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonIndexRoute = PokemonIndexRouteImport.update({
  id: '/pokemon/',
  path: '/pokemon/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonIdRoute = PokemonIdRouteImport.update({
  id: '/pokemon/$id',
  path: '/pokemon/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/page': typeof PageRoute
  '/about': typeof AboutLazyRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon': typeof PokemonIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/page': typeof PageRoute
  '/about': typeof AboutLazyRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon': typeof PokemonIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/page': typeof PageRoute
  '/about': typeof AboutLazyRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon/': typeof PokemonIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/page' | '/about' | '/pokemon/$id' | '/pokemon'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/page' | '/about' | '/pokemon/$id' | '/pokemon'
  id: '__root__' | '/' | '/page' | '/about' | '/pokemon/$id' | '/pokemon/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PageRoute: typeof PageRoute
  AboutLazyRoute: typeof AboutLazyRoute
  PokemonIdRoute: typeof PokemonIdRoute
  PokemonIndexRoute: typeof PokemonIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/page': {
      id: '/page'
      path: '/page'
      fullPath: '/page'
      preLoaderRoute: typeof PageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemon/': {
      id: '/pokemon/'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof PokemonIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemon/$id': {
      id: '/pokemon/$id'
      path: '/pokemon/$id'
      fullPath: '/pokemon/$id'
      preLoaderRoute: typeof PokemonIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PageRoute: PageRoute,
  AboutLazyRoute: AboutLazyRoute,
  PokemonIdRoute: PokemonIdRoute,
  PokemonIndexRoute: PokemonIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
